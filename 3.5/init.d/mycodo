#!/bin/bash
#
#  mycodo - script to start, stop, and restart the mycodo.py daemon
#
#  Copyright (C) 2015  Kyle T. Gabriel
#
#  This file is part of Mycodo
#
#  Mycodo is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  Mycodo is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Mycodo. If not, see <http://www.gnu.org/licenses/>.
#
#  Contact at kylegabriel.com

### BEGIN INIT INFO
# provides:          mycodo
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Required-Start:   
# Required-Stop:    
# Short-Description: Start|Stop mycodo.py daemon
# Description:       Start|Stop mycodo.py daemon
### END INIT INFO

export PATH="$PATH:/usr/sbin:/usr/local/bin:/usr/bin:/bin:/sbin"

case "${1:-''}" in
    'initialize')
        mkdir -p /var/log/mycodo
        mkdir -p /var/log/mycodo/images
        mkdir -p /var/www/mycodo/camera-stills
        mkdir -p /var/www/mycodo/camera-timelapse
        mkdir -p /var/www/mycodo/notes
        mkdir -p /var/www/mycodo/notes/uploads
        
        if [ ! -e /var/www/mycodo/log/update.log ]; then
            touch /var/www/mycodo/log/update.log
        fi
        if [ ! -e /var/www/mycodo/log/restore.log ]; then
            touch /var/www/mycodo/log/restore.log
        fi

        if [ ! -h /var/www/mycodo/images ]; then
            ln -s /var/log/mycodo/images /var/www/mycodo/images
        fi

        if [ ! -e /var/log/mycodo/sensor-t-tmp.log ]; then
            touch /var/log/mycodo/sensor-t-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/sensor-t.log ]; then
            touch /var/www/mycodo/log/sensor-t.log
        fi
        if [ ! -h /var/www/mycodo/log/sensor-t-tmp.log ]; then
            ln -s /var/log/mycodo/sensor-t-tmp.log /var/www/mycodo/log/sensor-t-tmp.log
        fi

        if [ ! -e /var/log/mycodo/sensor-ht-tmp.log ]; then
            touch /var/log/mycodo/sensor-ht-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/sensor-ht.log ]; then
            touch /var/www/mycodo/log/sensor-ht.log
        fi
        if [ ! -h /var/www/mycodo/log/sensor-ht-tmp.log ]; then
            ln -s /var/log/mycodo/sensor-ht-tmp.log /var/www/mycodo/log/sensor-ht-tmp.log
        fi
        
        if [ ! -e /var/log/mycodo/sensor-co2-tmp.log ]; then
            touch /var/log/mycodo/sensor-co2-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/sensor-co2.log ]; then
            touch /var/www/mycodo/log/sensor-co2.log
        fi
        if [ ! -h /var/www/mycodo/log/sensor-co2-tmp.log ]; then
            ln -s /var/log/mycodo/sensor-co2-tmp.log /var/www/mycodo/log/sensor-co2-tmp.log
        fi

        if [ ! -e /var/log/mycodo/sensor-press-tmp.log ]; then
            touch /var/log/mycodo/sensor-press-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/sensor-press.log ]; then
            touch /var/www/mycodo/log/sensor-press.log
        fi
        if [ ! -h /var/www/mycodo/log/sensor-press-tmp.log ]; then
            ln -s /var/log/mycodo/sensor-press-tmp.log /var/www/mycodo/log/sensor-press-tmp.log
        fi
        
        if [ ! -e /var/log/mycodo/relay-tmp.log ]; then
            touch /var/log/mycodo/relay-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/relay.log ]; then
            touch /var/www/mycodo/log/relay.log
        fi
        if [ ! -h /var/www/mycodo/log/relay-tmp.log ]; then
            ln -s /var/log/mycodo/relay-tmp.log /var/www/mycodo/log/relay-tmp.log
        fi
        
        if [ ! -e /var/log/mycodo/daemon-tmp.log ]; then
            touch /var/log/mycodo/daemon-tmp.log
        fi
        if [ ! -e /var/www/mycodo/log/daemon.log ]; then
            touch /var/www/mycodo/log/daemon.log
        fi
        if [ ! -h /var/www/mycodo/log/daemon-tmp.log ]; then
            ln -s /var/log/mycodo/daemon-tmp.log /var/www/mycodo/log/daemon-tmp.log
        fi

        if [ ! -e /var/tmp/sensor-t.log ]; then
            touch /var/tmp/sensor-t.log
        fi
        if [ ! -e /var/tmp/sensor-ht.log ]; then
            touch /var/tmp/sensor-ht.log
        fi
        if [ ! -e /var/tmp/sensor-co2.log ]; then
            touch /var/tmp/sensor-co2.log
        fi
        if [ ! -e /var/tmp/sensor-press.log ]; then
            touch /var/tmp/sensor-press.log
        fi

        chown www-data.www-data /var/tmp/sensor-t.log
        chown www-data.www-data /var/tmp/sensor-ht.log
        chown www-data.www-data /var/tmp/sensor-co2.log
        chown www-data.www-data /var/tmp/sensor-press.log
        
        chown -LR www-data.www-data /var/www/mycodo
        chown -LR www-data.www-data /var/log/mycodo

        find /var/www/mycodo/ -type d -exec chmod u+wx,g+wx {} +
        find /var/www/mycodo/ -type f -exec chmod u+w,g+w,o+r {} +
        find /var/www/mycodo/cgi-bin -type f -name '.?*' -prune -o -exec chmod 770 {} +
        chown root:root /var/www/mycodo/cgi-bin/mycodo-wrapper
        chmod 4775 /var/www/mycodo/cgi-bin/mycodo-wrapper
        exit 0
        ;;
    'start')
        $0 initialize
        python /var/www/mycodo/cgi-bin/mycodo.py 2>/dev/null &
        exit 0
        ;;
    'start-debug')
        $0 initialize
        python /var/www/mycodo/cgi-bin/mycodo.py -l d 2>/dev/null &
        exit 0
        ;;
    'stop')
        /var/www/mycodo/cgi-bin/mycodo_client.py -t
        
        printf "Checking if daemon has stopped (please wait 10 seconds)."
        
        for i in {1..10}
        do
            sleep 1
            printf "."
        done
        
        if ps aux | grep '[m]ycodo.py'
        then
            printf " Daemon is still running. Attempting to stop... "

            PID=`ps aux | grep '[m]ycodo.py' | awk '{print $2}'`
            WAIT_SECONDS=5
            count=0

            while kill $PID > /dev/null
            do
                sleep 1
                ((count++))

                # Has the process been killed?
                if ! ps -p $PID > /dev/null ; then
                    break
                fi

                # Have we exceeded $WAIT_SECONDS?
                if [ $count -gt $WAIT_SECONDS ]; then
                    kill -9 $PID
                    break
                fi
            done
            printf "mycodo.py (pid $PID) has been killed after $count seconds.\n"

            printf "Because daemon had to be killed, turning off all GPIOs\n"
            /var/www/mycodo/cgi-bin/gpio_initialize.py

        else
           printf " No daemon running.\n"
        fi
        
        $0 unlock
        exit 0
        ;;
    'restart'|'reload'|'force-reload')
        $0 stop
        $0 start
        exit 0
        ;;
    'debug')
        $0 stop
        $0 start-debug
        ;;
    'status')
        ;;
    'unlock')
        if [ -e /var/lock/mycodo/daemon.lock ]; then
            rm -f /var/lock/mycodo/daemon.lock
        fi
        ;;
    *)
        echo "Usage: $SELF initialize|start|stop|restart|debug|unlock"
        exit 1
        ;;
esac
